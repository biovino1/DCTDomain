All of the following commands are to search a query protein against a database
of proteins. In this project a database is simply one protein, but there can
be more than one protein in the db.fasta file that is referenced below. All
parameters are default from documentation which will be linked under each
section.


### Using blast
https://www.ncbi.nlm.nih.gov/books/NBK52636/

makeblastdb -in <db.fasta> -dbtype <prot/nucl> -parse_seqids -out <db_name>
blastp -query <query.fasta> -db <db_name>


### Using csblast (REQUIRES LEGACY BLAST)
https://github.com/cangermueller/csblast

Some notes here, K4000.lib and K4000.crf files come with csblast the .lib
file is used in this project. --blast-path should be set to wherever your
blast-legacy is installed. 

If you are using the conda environment from conda.sh, the K4000 files will be in
the ~./anaconda3/data directory and blast-legacy executables will be in the
~./anaconda3/envs/benchmarking/bin directory.

formatdb -t <db> -i <db.fasta> -p T -l formatdb.log
csblast -i <query.fasta> -d <db.fasta> -D <K4000.lib/crf> --blast-path <blastpgp dir>


### Using fasta
https://fasta.bioch.virginia.edu/wrpearson/fasta/fasta_guide.pdf

fasta36 <query.fasta> <db.fasta>


### Using hhsearch
https://github.com/soedinglab/hh-suite

First make sure you have a database downloaded from one of these sources:
1) https://uniclust.mmseqs.com/
2) https://bfd.mmseqs.com/
3) https://wwwuser.gwdg.de/~compbiol/data/hhsuite/databases/hhsuite_dbs/

This project uses the scop40 database because it is small, but the paper that
first performed this analysis used the uniclust30 database.

Then run the following commands:

ffindex_from_fasta -s <db>_fas.ffdata <db>_fas.ffindex <db>.fas
hhblits_omp -i <db>_fas -d <scop40/bfd/uniclust30> -oa3m <db>_a3m -n 2 -cpu 1 -v 0
ffindex_apply <db>_a3m.ffdata <db>_a3m.ffindex -i <db>_hmm.ffindex -d <db>_hmm.ffdata -- hhmake -i stdin -o stdout -v 0
cstranslate -f -x 0.3 -c 4 -I a3m -i <db>_a3m -o <db>_cs219
hhsearch -i <query.fasta> -d <db>


### Using phmmer
http://eddylab.org/software/hmmer/Userguide.pdf (phmmer instructions on p 41/227)

phmmer <db.fasta> <query.fasta>


### Using ublast
https://www.drive5.com/usearch/manual/cmd_ublast.html
https://drive5.com/usearch/manual/output_files.html

Both ublast and usearch can have different output formats, but all we used in this project was the
bitscore and evalues. More options can be found in the second link above.

usearch -ublast <query.fasta> -db <db.fasta> -evalue 1e-9 -userout hits.txt -userfields bits+evalue


### Using usearch
https://drive5.com/usearch/manual/cmd_usearch_local.html

usearch -usearch_local <query.fasta> -db <db.fasta> -id 0 -evalue 1 -userout hits.txt -userfields bits+evalue
